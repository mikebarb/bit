c
n
mycredentials
n
c
n
myauthorizationurl
n
mycredentials
n
c
n
c
n
body
n
status
n
response
n
parameters
n
options
url
n
self.token_credential_uri
client
n
options
n
self.token_credential_uri 
s
options
n
options
s
orig_fetch_access_token!(options)
options
s
code
n
base_url
@callback_uri
s
@client_id
s
user_id
s
n
s
request.url
user_id
n
callback_state
n
state_json
n
s
n
s
c
n
q
n
c
n
returned_authorisation["authorizationurl"]
returned_authorisation
n
return_options
n
c
q
returned_authorisation
returnedauthorisation
n
myauthorizationurl
n
c
q
returned_authorisation
n
myauthorizationurl
n
mycredentials
n
q
n
uri
n
options
n
self.state
options[:state]
options[:scope]
n
options[:approval_prompt]
options[:prompt]
options[:redirect_uri]
self.redirect_uri
n
options[:access_type]
n
:code
options[:response_type]
n
s
@authorization_uri
options
n
s
options[:state]
redirect_uri
n
URI.join(base_url, @callback_uri).to_s
@callback_uri
n
base_url
n
s
n
options
s
options
n
options
s
scope
n
options[:scope]
@scope
s
options
n
redirect_to = options[:redirect_to] || request.url
options[:redirect_to]
n
s
request.session.nil?
request.nil?
request.nil
s
list=
help list
help --list
list --help
help
list
where
options
s
myoptions
s
myid.id
user_id
s
tokenuser
n
s
id
s
stored_token(user_id)
s
n
s
request
myid.id
myauthorizer
s
@token_store
@scope
@client_id
s
myid
scopes
q
token_store.load(ENV['CLIENT_ID'])
token_store.delete(ENV['CLIENT_ID'])
ENV['CLIENT_ID']
token_store
tokenstore
c
found_token = token_store.load(myid)
c
found_token = token_store.load(myid)
found_token = token_store1.load(myid)
q
n
s
n
s
q
tokenuser
n
id
s
c
tokenuser
n
tokenuser
return_value
s
tokenuser
s
tokenuser
n
id
s
c
q
tokenuser = Tokenuser.where(client_id: id).first
tokenuser
tokenuser.update(token_json: token)
token = "xxx"
tokenuser.update(token_json: token)
n
c
q
token_store1
n
s
tokenuser.token_json
n
s
n
s
tokenuser.update(token_json: token)
n
c
q
user.update(token_json: token)
s
token
tokenuser
n
s
c
q
s
tokenuser
s
n
s
c
q
tokenuser.token
tokenuser
n
tokenuser
n
s
tokenuser
n
s
token
id
