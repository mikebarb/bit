c
delete 4
info b
c
flagIdOK
n
c
n
@studentsIndexById.has_key?(merge_into_id)
merge_into_id
n
c
n
c
@students
@studentsIndexById[merge_into_id]
merge_into_id
n
c
display s
b 1625
c
info b
delete 1
delete 2
delete 3
info b
delete all
info
delete --help
delete help
help
c
n
@students
n
@allDbStudentsIndex[s['id']].pname
mergedPname
n
merge_into_id
@studentsIndexById
n
info b
c
n
b 1627
info b
n
c
@studentsIndexById
@studentsIndexById[merge_into_id]
@studentsIndexById[merge_into_id]['oldpname']
merge_into_id
n
b 1626
info b
c
merge_into_id
@students
@students[merge_into_id]
@students[merge_into_id]['oldpname']
n
b 1624
c
@students
n
display s
c
n
c
q
@students[merge_into_id]['oldpname']
merge_into_id
n
display s
c
n
@allDbStudentsIndex[s['id']].pname
n
b 1624
c
q
s['pname']
n
b 1624
c
q
@allDbStudentsIndex[3047]
c
delete 2
info b
c
delete 3
idErrors
flagIdOK
fladIdOK
n
s.has_key?('pname')
n
s['oldpname'] != @allDbStudentsIndex[s['id']].pname
n
b 1624
n
b 1625
c
delete 1
n
s['oldpname'] != @allDbStudentsIndex[s['id']].pname
@allDbStudentsIndex[s['id']].pname
s['oldpname']
n
s.has_key?('id') && s.has_key?('oldpname')
s.has_key?('oldpname')
s.has_key?('id')
c
b 1624
q
s.has_key?('id')
s.has_key?['id']
display s
s
c
b 1624
@allDbStudentsIndex.count
@allDbStudentsIndex
c
delete 1
help
@allDbStudentsIndex
n
a
c
b 1618
q
info b
l
@allDbStudentsIndex.count
@allDbStudentsIndex
n
@allDbStudentsIndex
a
n
b 1618
@allDbStudentsIndex
n
@allDbStudentsIndex
@allDbStudents
n
q
@allDbStudents.count
@allDbStudents
@allDbStudentsIndex
c
q
@allDbStudents.count
@allDbStudents
@allDbStudents = Student.all
Student.all.count
Student.all
@allDbStudents
@allDbStudents.count
@allDbStudents = Student.all
c
q
c
q
thistutrole.first
thistutrole
c
q
params['flagDbUpdateRun']
params.has_key?('flagDbUpdateRun')
params
Parameters
c
Role.find(17630)
Role.where(student_id: 1200).count
Role.where(student_id: 1200)
Roles.where(student_id: 1200)
Student.find(1200)
Student.find(1160)
c
n
@student_merge_into
@student_merge
@roles
b 1746
b 1745
c
q
temp = Student.find(3047)
temp = Student.find(3048)
c
q
Student.find(3048)
Student.find(3047)
c
Student.find(3048)
Student.find(3047)
c
Student.find(3048)
Student.find(3047)
c
@flagDbUpdateRun
n
@roles
@student_merge_into
@student_merge
q
Student.find(3047)
Student.find(3048)
c
n
c
@student
n
c
s['pname']
@student
n
@students[i]['message'].length
n
@student.pname
s['pname']
n
c
Student.where(pname: "c test")
c
n
@students[i]['message']
"ERROR - record already in the database - row #{(i+1).to_s}"
c
n
c
Student.where(pname: "b test")
Student.where(pname:" b test")
c
n
c
Student.where(pname: "a test")
c
n
c
n
q
n
@checkstudents
n
@students[i].has_key?('pname') 
q
c
@students
@students_raw
c
n
c
