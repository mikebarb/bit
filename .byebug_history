c
@role.lesson.status
c
@num_elements_added
@block_roles.count
c
n
c
display @domchangerun.map{|o| o['action']}
display i
c
n
@domchangerun.map{|o| o['action']}
@block_roles.count
@num_elements_added
q
n
@block_roles.count
@num_elements_added
c
n
c
n
display i
n
@domchangerun[i]['action']
q
@domchangerun[i]['action']
n
@domchangerun[i]['action']
n
display i
@block_roles.count - @num_elements_added
@num_elements_added
n
c
@domchangerun
c
n
@domchange
n
@domchange
n
@domchange
n
@domchange
n
@domchange
n
@domchange
n
@domchange
c
dis b 
c
processOrder
c
b 1066
q
processOrder
processOrder.reverse! unless flagLengtheningBlock
processOrder
processOrder.reverse unless flagLengtheningBlock
processOrder = (0..@block_roles.length-1).map{|o| o}
flagLengtheningBlock
processOrder
n
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
n
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
n
display i
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
n
b 1068
n
@block_roles[0]
processOrder
n
@block_roles_remove
n
@block_roles_remove[i]
n
@block_roles_remove
@block_roles_remove.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
b 1058
(0..@block_roles_remov
n
@block_roles_remove != nil
n
b 1067
b 1056
@block_roles_remove.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
c
q
flagLengtheningBlock
processOrder
n
processOrder = (0..@block_roles.length-1).map{|o| o}
processOrder
processOrder.reverse!
processOrder
processOrder = (0..2).map{|o| o}
processOrder = Array.new
processOrder.push( = (0..2).each
processOrder = (0..2).reverse
processOrder = (o..2).reverse
processOrder
processOrder.reverse
processOrder
n
processOrder
c
dis b
c
@block_roles[3]
n
@block_roles[i].save
@block_roles[i-1]
@block_roles[i]
n
@block_roles[i]
n
@block_roles[i]
@roles[i]
@block_roles.length-1
i == @block_roles.length-1
n
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
processOrder
n
c
n
c
n
info b
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
c
n
c
info b
help
help display
display
b
c
n
@block_roles[i]
n
@block_roles[i+1].id
n
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
n
@block_roles[i+1]
@block_roles[i]
display i
processOrder
@block_roles.length-1
display 1
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
c
b 1087
b 1078
q
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
c
b 1087
b 1078
q
@block_roles[j]
@block_roles[j].save
@block_roles[j].id == nil
@block_roles[j]
j
n
j
@block_roles[j]
n
@block_roles[j]
b 1074
b 1071
dis b
@block_roles[j]
n
@block_roles[j]
n
@block_roles[j].id == nil
@block_roles[j]
j
n
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
b 1071
processOrder
c
b 1074
b 1070
dis b
dis
c
n
processOrder
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
b 1074
n
b 1067
processOrder
n
@block_roles[0].id == nil
@block_roles[0]
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
n
b 1061
@block_roles_remove
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
q
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
bt
help frame
help where
@block_lessons.map{|o| puts [o.id,o.next,o.first].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block,o.lesson_id].inspect}
@block_roles.map{|o| puts [o.id,o.next,o.first,o.block].inspect}
@block_roles.map(|o| puts [o.id,o.next,o.first,o.block].inspect}
@block_roles
flagChain
c
q
n
@block_roles.map{|o| puts [o.id,o.next, o.lesson_id].inspect }
@block_roles_remove.map{|o| puts [o.id,o.next, o.lesson_id].inspect }
@block_roles_remove
@block_roles_remove = @block_roles.pop(blocksToRemove)
@block_roles.map{|o| puts [o.id,o.next, o.lesson_id].inspect }
@block_roles
@block_roles_remove.map{|o| puts [o.id,o.next, o.lesson_id].inspect }
n
@block_roles_remove.map{|o| puts [o.id,o.next, o.lesson_id].inspect }
@block_roles.map{|o| puts [o.id,o.next, o.lesson_id].inspect }
blocksToRemove
n
q
@block_roles.count
@block_lessons.count
blocksToRemove
@block_roles.map{|o| puts [o.id,o.next, o.lesson_id].inspect }
@block_roles
