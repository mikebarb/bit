c
thisstudent
c
thisstudent
c
q
c
q
c
cells["stats"]['routine']
c
cells["stats"]['routine']
c
display k
k
c
k
c
k
c
k
c
k
c
display v
dsp v
v
k
c
cells['stats']['routine']
c
cells['stats'].key?('routine')
q
c
s
cells['stats']['routine'].map{|k,v| [k,v]}
cells['stats']['routine'].keys
cells['stats']['routine']
cells['stats']
cells
q
c
cells["stats"]
q
["scheduled", "attended"].include?thisrole.status
thisstudent
thisrole
c
@roleinfo[thisstudentrole].student
@roleinfo[thisstudentrole]
thisstudentrole
c
n
@tutrole
n
@tutrole_from
n
@tutrole
n
@tutrole
c
n
@role
n
@role
@role_from
n
params[:old_lesson_id]
@role
n
c
@role_from
n
params[:old_lesson_id]
@role
n
q
@role_from = Role.where(:student_id => params[:student_id], :lesson_id => params[:old_lesson_id]).first
@role_from = Role.where(:student_id => params[:student_id], :lesson_id => params[:old_lesson_id])
q
@role_from.ids
@role_from.id
@role_from
@role_from = Role.where(:student_id => params[:student_id], :lesson_id => params[:new_lesson_id])
c
@locations
c
q
c
b 78
c
k.intern
k = "test"
@options
del 1
n
c
@options
c
b 73
c
params
Parameters
params
n
@options
@optons
c
@options
c
n
c
n
c
@options.inspect
@options.to_json
@options
c
location
c
location
q
n
mysheetproperties = googleAddSheet.call(location, mysheetproperties)
mysheetproperties
location
n
locationindex
c
n
mysheetproperties[locationindex]['sheet_id']
mysheetproperties[locationindex]['title']
locationindex
mysheetproperties
n
location
n
mysheetproperties
q
mysheet
mysheetproperties
n
q
n
result = service.batch_update_spreadsheet(spreadsheet_id, request_body, {})
request_body
n
request_body
n
s
n
q
n
q
n
request_body.requests
c
request_body.requests
n
request_body.requests
n
request_body.requests
n
s
q
n
request_body.requests
n
{"delete_sheet": {"sheet_id": o['sheet_id']}}
request_body.requests == nil
n
s
sheetproperties
c
n
display i
request_body.requests
n
request_body.requests
display i
dsp i
i
o
s
sheetproperties
q
sheetproperties
n
q
n
q
result.replies[0].add_sheet.properties.title
result.replies[0].add_sheet.properties.sheet_id
result.replies[0].add_sheet.properties.index
result.replies[0].add_sheet.properties
result.replies[0].add_sheet
result.replies[0]
result.replies
result
result.add_sheet
result.replies.add_sheet
result.replies.sheet_id
result.replies.add_sheet
result.replies
result
n
q
sheetproperties
q
sheetproperties
q
mysheets.map{ |o| o.properties.title}
mysheets.map{ |o| o.properties.sheet_id}
mysheets.map{ |o| o.properties.id}
mysheets[0].properties.sheet_id
mysheets[0].properties.id
mysheets[0].properties
mysheets[0]
mysheets[0][@index]
mysheets[0].@index
mysheets[0].index
mysheets.count
mysheets = result.sheets
mysheets = result["sheets"]
result.sheets[2]
result.sheets[1]
result.sheets[0]
result.sheets
result["sheets"]
result
q
n
q
n
request_body
n
request_body
q
request_body.methods
y
q
request_body.methods
request_body.class
request_body.requests
myusp
n
request_body
n
q
n
myusp
n
request_body
n
q
c
