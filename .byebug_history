q
myslotTo
n
thisslot
n
q
myslotTo
n
mytimeslotTo
q
myslotTo
n
mytimeslot + adddays.to_i * 86400
mytimeslot
n
q
thisslot.timeslot.class
thisslot.timeslot
q
thisslot.timeslot
n
thisslot
q
c
q
thisslot.inspect
thisslot = Slot.find(thisslotid)
thisslotid
c
q
myendcopyfromdate
mystartcopyfromdate
@cal
q
siteDate
slots[1]['value'].match(/(\d.*)/)
siteDate
n
n[1]
siteDate.match(/(\d+.*)/)
siteDate
n
c
n
sitevalue
site
n
@cal
q
slots[1]['value']
slots[1]['value'].match(/(\d+.*)/)
n[1]
n = siteDate.match(/(\d+.*)/)
siteDate.class
siteDate
mytimeslot
c
q
@locations.each { |l| p l.inspect}
@locations.each do |l| {p l.inspect}
@locations
@cal
c
q
@rowindex
@rowheaders
@colindex
@colheaders
@cal
@cak
entry
n
entry
n
@cal
n
@rowheaders
@colheaders
@datetimes
datetime
@datetimes.inspect
@datetimes
n
q
c
l 70
i b
@cal
c
b 70
myenddate
mystartdate
q
sf
myendcopytodate
mystartcopytodate
@cal
c
mystartdate
myenddate
q
@cal
c
key
c
key
c
key
c
value
key
c
b 90
s
q
@rowheaders.sort_by { |key, value| key }
@rowheaders
c
b 71
@datetimes.inspect
@datetimes
q
thisslotid = slots[1]['slotid']
lesson.slot.id
c
b 182
slot.id
@cal
q
c
mytimeslot + adddays.to_i * 86400
24 * 3600
mytimeslot + adddays.to_i * 3600 * 24
mytimeslot
mytimeslot.next_day(adddays.to_i)
mytimeslot.to_date
mytimeslot
mytimeslot.to_date
adddays.to_i
mytimeslot.to_date.next_day(adddays.to_i).to_time
mytimeslot.class
mytimeslot
add_days(mytimeslot, adddays.to_i)
adddays(mytimeslot, adddays.to_i)
adddays.to_i
adddays
temp
temp.to_s
Time.parse( temp.to_s + temp1)
temp1 = slots[0]['value'].tr("-", ":")
Time.parse( temp.to_s + slots[0]['value'].tr("-", ":"))
Time.parse( temp.to_s)
Time.parse temp.to_s
Time.parse temp
temp.to_s
temp = siteDate.to_date + adddays
siteDate.to_date + adddays
siteDate.to_date
siteDate
adddays
mytimeslot
(mytimeslot.to_date + adddays).to_time
mytimeslot.class
mytimeslot.type
mytimeslot + adddays
adddays
mytimeslotTo
mytimeslot
myslotTo
c
q
siteName
q
siteName
c
q
c
n
student
n
c
lesson.students
lesson.tutors
i b
l
c
b 109
n
tutor
c
b 103
lesson.tutors.respond_to?(:each)
lesson.tutors.respond_to?(each)
lesson.tutors
lesson
c
b 101
c
b 100
i b
c
q
lesson.tutors
lesson
c
b 97
c
b 99
slots
lesson
s
c
q
slots
q
slots
c
n
q
slots[0]["value"]
slots
slotindex
n
slots
siteDate
siteName
slotindex
c
b 89
c
q
c
sitevalue[2]
sitevalue[1]
sitevalue[0]
sitevalue
slots
@cal
sitevalue
c
q
c
myslot = Slot.new(timeslot: mytimeslot, location: siteName)
mytimeslot = Time.parse(siteDate + ' ' + sitevalue[1][0]['value'].tr("-", ":"))
mytimeslot = Time.parse(slotTime1)
slotTime1 = siteDate + ' ' + slotTime
mytimeslot = Time.parse(slotTime1)
slotTime = slotTime.tr("-", ":")
mytimeslot
mytimeslot = Time.parse(slotTime1)
slotTime1 = siteDate + ' ' + slotTime
slotTime.tr("-", ":")
slotTime = sitevalue[1][0]['value']
Time.parse "2018-04-05 11:37 PM"
Time.parse "2018-04-05 11-37 PM"
Time.parse "2018-04-05 11-37-30 PM"
