c
this_start_date
n
this_start_date
c
Rails.env.production?
Rails.env.development?
Rails.env.development
q
c
n
cells["value"].to_s
cells["value"]
n
timeoflessonid
n
cells
q
rows
cells
n
timeoflessonid
n
timeoflessonid
teimoflessonid
n
q
c
cells["value"]
q
cells['value']
cells
celldow
n
firsttablecolumn
n
cells
cellIndex
n
s
n
c
rows
cells
rowindex
q
mytimeid
mytime
q
mytime = mytime.gsub('-',  '')
mytime = mytime.gsub(' ',  '')
mytime
c
mytime
mytime = mytime.gsub(' ', '-')
mytime
mytime.gsub(' ', '-')
mytime
q
listoftimes
q
mytime
n
o[0]
o['value']
o
index
q
calLocation[1][0]
index
o
calLocation[1][0]
calLocation[1]['value']
calLocation[1]
calLocation[0]
calLocation.class
calLocation.type
calLocation
o
index
o[0]
o
q
calLocation[2][0]
calLocation[1][0]
calLocation[1][1]
calLocation[1][0]
calLocation[1]
calLocation[1]['value'].inspect
calLocation[1]['value']
calLocation[1]
calLocation[0]
calLocation
c
listoftimes
q
c
disable b 2
disable b 1
help
?
c
catchupFlexible
catchupRoutine
s['sum']
n
catchupRoutine
n
freeRoutine
n
freeRoutine
s[ss]
c
b 741
s[ss]
n
c
s[ss]
n
c
display thisstudent.status
b 719
c
v
c
n
this_error
n
dest_chain
source_chain
c
n
c
dest_chain
source_chain
c
n
this_error
n
dest_chain
source_chain
c
n
dest_chain
source_chain
q
dest_chain
source_chain
c
dis b 1
h
c
@domchangebreakchainlast
n
c
@domchange['object_type']
n
c
@domchangebreakchainlast
n
@domchangebreakchainlast['new_slot_id']
n
o
n
@role_breakchainlast
c
@domchangerun[0]
@domchangebreakchainlast
n
c
@domchangerun[0]
domchanges
@domchangebreakchainlast['html_partial']
n
c
b 1256
n
c
@domchangebreakchainlast
n
@domchangebreakchainlast
slot_id
n
c
n
c
n
c
n
q
o.slot_id
o.slot.timeslot.strftime("%Y%m%d%H%M")
o.slot.location[0,3]
o.slot_id
o
o = @role_breakchainlast
o.inspect
o
@role_breakchainlast
o
n
@domchange
n
@role_breakchainlast
c
n
q
y
:q
mike = Lesson.includes(roles: :student).where(first: role.first)
mike[0].roles[0].student
mike[0].roles[0]
mike[0].roles
mike = Lesson.includes(roles: :student).where(first: role.first)
mike[0].roles
mike[0]
mike = Lesson.includes(:roles).where(first: role.first)
role.first
role
c
mike[0].roles
mike[0]
mike = Lesson.includes(:roles).where(first: role.first)
role.class
role
mike[0].roles
mike[0].role
mike.role
mike
mike = Lesson.includes(:role).where(first: role.first)
mike.roles
mike = Lesson.includes(:roles).where(first: role.first)
mike.roles
mike.role
mie.role
mie.role[0]
mike = Lesson.includes(roles: :students).where(first: role.first)
mike = Lesson.includes(roles: :student).where(first: role.first)
mike = Lesson.includes(:roles).where(first: role.first)
Lesson.includes(:roles).where(first: role.first)
role
role.first
@role_chain[0].roles
@role_chain[o].roles
@role_chain = Lesson.includes(:slot, roles: :students, tutroles: :tutors).where(first: role.first)
c
b 1019
@domchange
n
c
n
c
n
@domchange
n
@lesson
