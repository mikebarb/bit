c
@domchange
c
@domchange
c
@domchange
c
mytimeid
mytime
c
this_error
c
b 608
@block_roles.map{|o| puts [o.id, o.status].inspect}
n
@domchangerun
n
@block_roles.map{|o| puts [o.id, o.status].inspect}
n
c
q
@block_roles.map{|o| puts [o.id, o.status].inspect}
@block_roles
role
n
c
this_error
c
b 760
n
@role_chain.map{|o| puts [o.id, o.status].inspect}
@role_chain.map{|o| puts [o.id, o.status.inspect]}
@role_chain.map{|o| puts [o.id, o.status]}
@role_chain.map{|o| puts [o.id]}
@role_chain
n
role.first
n
role
n
options
role
n
role
n
@lesson
n
lesson_id
n
object_domid
c
n
@lesson
n
lesson_id
n
object_domid
q
c
@lessons_new.map{|o| puts [o.id, o.status, o.slot.location, o.slot.timeslot].inspect}
@lessons_new.map{|o| puts [o.id, o.status, o.slot.timeslot].inspect}
@lessons_new = Lesson.includes(:slot).where('status = :st AND timeslot >= :sd', {st: 'global', sd: nowdate}).order("slots.timeslot")
@lessons_new.map{|o| puts [o.id, o.status, o.slot.timeslot].inspect}
@lessons_new = Lesson.joins(:slot).where('status = :st AND timeslot >= :sd', {st: 'global', sd: nowdate}).order("slots.timeslot")
@lessons_new.map{|o| puts [o.id, o.status, o.slots.timeslot].inspect}
@lessons_new.map{|o| puts [o.id, o.status, o.slot.timeslot].inspect}
@lessons_new.count
@lessons_new = Lesson.joins(:slot).where('status = :st AND timeslot >= :sd', {st: 'global', sd: nowdate}).order("slot.timeslot")
@lessons_new.map{|o| puts [o.id, o.status, o.slot.timeslot].inspect}
@lessons_new.map{|o| puts [o.id, o.status].inspect}
@lessons_new.count
@lessons_new
nowdate
n
c
nowdate
nowdate = DateTime.now.beginning_of_day
DateTime.now.beginning_of_day
DateTime.now.start_of_day
DateTime.now
DateTime.now.begging_of_day
Date.new
Date.now
DateTime.now
Datetime.today
Datetime.new
Datetime.now
c
@roles.count
@roles
n
c
@roles
n
c
@roles.count
@roles
n
q
mike.count
mike = Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :start_date", {start_date: mystartdate})
Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :start_date", {start_date: mystartdate})
Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :startdate", {start_date: mystartdate})
@roles
@roles.count
n
q
Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :start_date", {start_date: mystartdate})
Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :startdate", {start_date: mystartdate})
Role.includes(lesson: :slot).where(lesson.slot.timeslot: startdate)
==========================
c
wantedstatus
wantedkind
n
c
n
s
n
q
wantedstatus
wantedkind
n
c
params.map {|k,v| puts [k,v].inspect}
params.map {|k,v| pusts [k,v].inspect}
params
q
mylessoncomment.sub(/\n$/, '')
mylessoncomment.sub(/n$/, '')
mylessoncomment
n
mylessoncomment
q
c
v
mylessoncomment
n
mylessoncomment
q
v
@cal
n
@cal
@options
q
c
((current_place - copied_from)/1.week).round
((current_place - copied_from)/1.week)
(current_place - copied_from)
(current_place - copied_from).weeks
current_place
n
copied_from
n
c
copied_from_ids
@copied_from_roles
@copied_from_roles_index
info display
dis d 1
info display
info
c
=============================================
=====================================================
============================================
-----------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++
============================================
c
dis b 1
help
delete b 1
info b
c
slot_html_partial
n
display s
n
c
b 809
s['allocate']
s[ss]
n
entry.roles
n
s[ss]
n
slot_id
c
slot_dbid
slot_id 
slot_dom_id
@slot_lessons.map {|o| puts  [o.id, o.slot_id, o.status].inspect}
@slot_lessons.map {|o| puts  [o.id, o.slot_id].inspect}
@slot_lessons
mike
mikerole = Role.where(lesson_id: 57169)
mikerole = Role.where(lesson_id: 57169).count
mikerole = Role.where(lesson_id: 66502).count
mikerole = Role.where(lesson_id: 66502)
mike = Lesson.find(66502)
mike = Lesson.find(6650-2)
entry
@slot_lessons
slot_dbid
slot_id
entry
n
entry.roles
entry
n
entry.roles.count
entry.roles
s[ss]
n
ss
n
entry.slot_id
entry.students.count
entry.students
entry
c
n
statschanges
n
@trackslots
trackslots
statschanges
n
statschanges
get_slot_stats(k)
k
c
slot_dom_id
c
@trackslots
c
@trackslots
c
@trackslots
c
@trackslots
c
@trackslots
c
@trackslots
q
@trackslots
c
n
@domchange
n
@domchange
n
