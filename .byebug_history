c
changestudent
changeroles
changelessons
c
@dsp.map{|o| o['modified']}
@dsp.sort_by{ |o| o['modified']}
@dsp[0]['modified']
@dsp[0].modified
@dsp[0]
@dsp
c@dsp
c
@dsp
n
display h
h
o
n
q
mylessons[mylessonsindex[mytutroles[mytutrolesindex[o.rid]].lesson_id]].slot.timeslot
mylessons[mylessonsindex[mytutroles[mytutrolesindex[o.rid]].lesson_id]]
mylessonsindex[mytutroles[mytutrolesindex[o.rid]].lesson_id]
mylessonsindex
mylessonsindex[[mytutroles[mytutrolesindex[o.rid]].lesson_id]]
[mytutroles[mytutrolesindex[o.rid]].lesson_id]
mytutroles[mytutrolesindex[o.rid]]
mytutrolesindex[o.rid]
mytutrolesindex
o.rid
o
q
mytutroles
mytutroleindex
mytutroles.each_with_index { |v, i| mytutrolesindex[v.id] = i }
mytutrolesindex = {}
mytutroles[0]
mytutroles
mytutroles[o.rid]
mytutroles[o.rid][lesson_id]
mytutroles[o.rid].lesson_id
o.rid
o
mytutroles[o[rid]]
mytutroles[changetutrole[rid]]
changetutrole[rid].lesson_id
changetutrole[rid].lesson_id]
mytutroles
o
q
o
mylessons
mylessonsindex
changelessons.count
changelessons
o.id
q
display v
display i
i
q
mylessons.map {|o| o.id}
mylessons.ids
mylessons
c
q
c
changetutor
changetutroles.count
changetutroles
changelessons.count
changelessons
mytutroles
mytutroles.count
mytutroles
mylessonsids.count
mylessons.count
mylessons
myslots.count
myslots
slots
c
mytutroles.ids
mytutroles
changelessons.count
changelessons
Tutrole.find(26931)
Lesson.find(25551)
mytutroles.count
mylessons
tutor_id
mytutroles
mytutroles.count
mytutroles
mylessons
mylessonsids.count
mylessonsids
q
mylessonsids
q
mylessonsids = mylessons.map {|o| o.id}
mytutroles.count
mylessons.count
myslots.count
myslots
c
my_changed_attributes['updated_at'] != nil
my_changed_attributes['created_at']
my_changed_attributes['created_at'] != nil
self['created_at']
self
my_changed_attributes
n
my_changed_attributes
@mychange
q
changetutroles = Change.where(table: 'Tutrole', rid: mytutroles.ids)
mytutroles
mytutroles.count
mylessons.count
myslots.count
changelessons.count
changelessons
q
mylessons
mylessons = mylessons.select { |o| mytutrolesids.include?(o.id) ? true : false }
mylessons.count
mytutrolesids = mytutroles.map {|o| o.id}
mytutroles.count
mytutroles = Tutrole.select(:id).where(tutor_id: tutor_id, lesson_id: mylessons)
mylessons.count
mylessons = Lesson.select(:id).where(slot_id: myslots)
mytutroles
mylessons
mylessons.count
myslots.count
c
mytutroles.count
mytutroles = Tutrole.where(tutor_id: tutor_id, lesson_id: mylessons1ids)
mylessons1ids.count
mylessons1ids = mylessons1.map {|o| o.id}
mylessons1.count
mylessons1 = Lesson.where(slot_id: myslotsids)
myslotsids = myslots.map {|o| o.id}
mytutroles.count
mylessons1.count
mylessons1 = Lesson.where(slot_id: myslots)
mylessons
mylessons.count
myslots.count
myslots
q
Date.parse('4-4-2018')
Date.new(4/4/2018)
Date.new
q
mytutrolesids
changetutroles.count
changetutroles = Change.where(table: 'Tutrole', rid: mytutrolesids)
changetutroles
changelessons
mytutroles.count
mytutroles
mylessons.count
mylessons
myslots.count
myslots
q
mytutroles
tutroles
enddate
startdate
Date.today - (Integer(current_user.history_back) rescue 100)
(Integer(current_user.history_back) rescue 100)
(Integer(current_user.history_back))
(Integer(current_user.history_back)
Date.today
q
enddate
startdate
changetutor.count
changetutroles.count
changelessons.count
changelessons
c
q
result.count
result
c
q
n
c
n
mytutrolesids
mylessons
c
n
mytutrolesids
mylessons
c
n
c
q
mytutroles.ids
mytutroles.id
mytutroles
mylessons[0].id
mylessons
c
n
c
n
mytutroles.count
mytutroles
mylessons.count
mylessons
myslots.count
myslots
c
q
mytutroles.count
mytutroles
myslots.count
mylessons.count
mylessons
changetutroles.count
changetutroles = Change.where(table: 'Tutrole', rid: mytutroles)
changetutroles.count
changetutroles.couont
changetutroles = Tutrole.where(table: 'Tutrole', rid: mytutroles)
changetutor = Change.where(table: 'Tutor', rid: tutor_id)
changetutroles = Tutrole.where(table: 'Tutrole', rid: mytutroles)
changelessons = Change.where(table: 'Lesson', rid: mylessons)
mytutroles = Tutrole.select(:id).where(tutor_id: tutor_id, lesson_id: mylessons)
mylessons = Lesson.select(:id).where(slot_id: myslots)
myslots = Slot.select(:id).where(timeslot: startdate..enddate)
changetutor = Change.where(table: 'Tutor', rid: tutor_id)
changelessons = Change.where(table: 'Lesson', rid: mylessonsids)
mytutroles = Tutrole.where(tutor_id: tutor_id, lesson_id: mylessonsids)
mytutroles = Tutrole.where (tutor_id: tutor_id, lesson_id: mylessonsids)
mylessonsids = Lesson.where(slot_id: myslotsids).map{|o| o.id}
myslotsids = Slot.select(:id).where(timeslot: startdate..enddate).map{|o| o.id}
changelessonsids.count
changelessonsids = Lesson.where(slot_id: changeslotsids).map{|o| o.id}
changelessons =changelessonsids = Lesson.where(slot_id: changeslotsids).map{|o| o.id} Lesson.where(slot_id: changeslotsids)
changelessons = Lesson.where(slot_id: changeslotsids)
changelessons.inspect
changelessons
changelessons = Lesson.where(slots: changeslotsids)
changelessonsids.map{|o| o.id}
changelessonsids
changelessonsids = Lesson.where(slots: changeslotsids)
changelessonsids = Lesson.where(slots: changeslotsids).map{|o| o.id}
changelessonsids = Lesson.where(slots: changeslotsids)
changelessonsids = Lesson.where(slots: changeslotsids}
changelessonsids = Lesson.where(slots: changeslotsids).map{|o| o.id}
