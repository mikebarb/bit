q
myText.length
myBreaks[1]
myBreaks[1] <= myText.length
q
result
n
myText
q
result[:update_cells][:rows][0][:values][0][:text_format_runs]
result[:update_cells][:rows][0][:values][0]
result[:update_cells][:rows][0][:values]
result[:update_cells][:rows][0]
result[:update_cells][:rows]
result[:update_cells]
result[:update_cells[:rows[0][:values[0][:text_format_runs[1]]]]]
result[:update_cells]
result["update_cells"]
result[update_cells:]
result{update_cells:}
result
secondRun
n
myText
n
q
myBreaks[1] < myText.length
myText.length
myBreaks
myText
n
result
n
q
myformat
n
q
myformat
mydata
n
myText.length
myText
myBreaks
q
c
student.pname.length
formatBreakPoints
c
n
batchitems
batcjote,s
q
result
result[:repeat_cell][:range][:end_row_index] = 5
nr
result[:repeat_cell][:range][:end_row_index] = rs - 1 + nr
result[:repeat_cell]
result['repeat_cell']
result.repeat_cell
result
result->repeat_cell
result=>repeat_cell
result("repeat_cell")
result
result["repeat_cell"]
repeat_cell
result
cs
rs
sheet_id
result["repeat_cell"]
nr
c
n
c
n
nr
result
n
result
n
c
n
c
n
body
n
requests
n
palign
q
c
maxPersonRowInAnySlot
c
maxPersonRowInAnySlot
n
baseLessonRowInSlot
baseTutorRowInLesson
currentTutorRowInLesson
maxPersonRowInAnySlot
maxPersonAnyRowInSlot
c
b 2179
b 2124
currentRow
c
currentRow
cirremtRow
tutor.pname
q
(student.sex.downcase.include?("female") ? "(F) " : (student.sex.downcase.include?("male") ? "(M) " : ""))
" Yr: " + (student.year == nil ? "   " : student.year.rjust(3)) + " | " +  student.study
student.study
(student.year == nil ? "   " : student.year.rjust(3)).inspect
(student.year == nil ? "   " : student.year.rjust(3))
student.year.rjust(3)
student.year.rjust(3))
student.year
student.sex
c
batchitems
c
body
n
q
c
n
s
request_body
n
s
mydata1
q
baseSlotRowInSite
baseLessonRowInSlot
currentTutorRowInLesson
currentRow
q
baseSlotRowInSite
q
c
baseSlotRowInSite
baseLessonRowInSlot
currentTutorRowInLesson
tutor.pname
currentRow
c
tutor.pname.inspect
c
tutor.pname.inspect
c
tutor.pname.inspect
c
tutor.pname.inspect
tutor.pnam.inspect
tutor.pnam
currentTableCol
currentLessonRow
c
n
body
n
s
n
c
n
s
colouritems
n
c
n
c
mydata
n
mydataitem
dataitem
mydata
n
mydata
n
mydata
s
mydata
c
n
mydata
n
mydata
n
mydata
mydataitem
n
dataitem
n
range
n
range
n
values
s
mydataitem
mydata
c
response.spreadsheet_url
response.title
response
c
range
n
range
range\
n
c
n
sheet_name
c
n
values
nr
cs
rs
c
range
c
range
c
range
c
range
c
body
c
service.batch_update_spreadsheet(spreadsheet_id, delete_range_request, {})
delete_range_request
n
c
n
result = service.batch_update_spreadsheet(spreadsheet_id, request_body, {})
request_body
n
request_body
n
c
n
c
result = service.batch_update_spreadsheet(spreadsheet_id, request_body, {})
request_body.shift_dimension = "ROWS"
request_body.range = gridrange
request_body.range
request_body = Google::Apis::SheetsV4::DeleteRangeRequest.new
request_body.range
gridrange
request_body
n
c
n
