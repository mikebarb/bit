c
Tutrole.find(26821)
@Tutrole.find(26821)
@tutrole
c
@tutrole
c
n
@tutrole
c
@sessinfo.count
@sessinfo1.count
@sesninfo1.count
@sessoninfo1.count
@sessomfp1.count
c
dis b
c
@tutroleinfo1.length
@tutroleinfo1
a
c
b 186
dis b
d b
display
d
dis
dsp
c
a
n
c
a
n
o
c
b 185
b 181
del 1
o
o.status
n
b 180
q
o.tutor
o
c
o
c
o
c
o
a
n
b 180
c
@tutroleinfo
c
del 1
c
@tutroleinfo
c
@tutroleinfo.map{|o| p o.tutor.pname}
@tutroleinfo.map{|o| o.tutor.pname.inspect}
@tutroleinfo.map{|o| o.tutor.pname}
@tutroleinfo.map{|o| o.tutor.pname}}
@tutroleinfo.map{|o| o.id}
@tutroleinfo
@tutroleinfo[3]
@tutroleinfo[2]
@tutroleinfo[1]
@tutroleinfo[0]
@tutroleinfo
c
n
c
tutor = thistutrole.tutor
thistutrole = @tutroleinfo[tutroleInfo_index] 
@tutroleinfo[tutroleInfo_index]
tutroleInfo_index = @tutrole_lessonindex[entry.id][0]
@tutrole_lessonindex[entry.id]
entry.id
@tutrole_lessonindex.has_key? entry.id
n
lesson_id
n
entry
c
b 270
c
@tutrole_lessonindex
c
@roleinfo[10]
@roleinfo[0]
c
@sessinfo[:id 0]c
@slotsinfo
@datetimes
c
@tutroleinfo[0]
@tutroleinfo.find(22376)
c
@locations
c
@locations
@sessinfo.find(22407)
@sessinfo.where(id: 22407)
@sessinfo.where(slot_id: 2095)
@sessinfo.where(slot_id: 2094)
@sessinfo[id: 0]
@sessinfo[:id 0]
@sessinfo[id: 0]
@sessinfo[0]
@sessioninfo
@sessioninfo[id: 22403]
@sessioninfo[0]
@sessinfo
c
l
@sessinfo1
@sessinfo[0]
@sessinfo
@cal
c
@loc = @slotsinfo.select('location')
@loc = @slotsinfo.distinct('location')
@loc = @slotinfo.distinct('location')
@loc = @slotinfo.select(location).distinct
@loc = Slot.select('location').distinct
@loc = @slotsinfo.select('location')
@loc = @slotsinfo
@locations
c
n
c
@lessinfo = Lesson.joins(:slot).where(slot_id: @slotsinfo.map {|h| h.id})
@slotsinfo.map {|h| h.id}
@slotsinfo.map |h| {h=>id}
@slotsinfo.map |h| {h.id}
@slotsinfo
@lessinfo = Lesson.joins(:slot).where(slot_id: @slotsinfo.map |id| {id})
@lessinfo = Lesson.joins(:slot).where(slot_id: @slotsinfo.id)
@lessinfo.inspect
@lessinfo = Lesson.joins(:slot).where(slot: @slotsinfo)
@lessinfo.inspect
@lessinfo
@lessinfo = Lesson.joins(:slot).where(@slotsinfo)
Lesson.joins(:slot).where(@slotsinfo)
@sessinfo1
@slotsinfo
q
myText.length
myBreaks[1]
myBreaks[1] <= myText.length
q
result
n
myText
q
result[:update_cells][:rows][0][:values][0][:text_format_runs]
result[:update_cells][:rows][0][:values][0]
result[:update_cells][:rows][0][:values]
result[:update_cells][:rows][0]
result[:update_cells][:rows]
result[:update_cells]
result[:update_cells[:rows[0][:values[0][:text_format_runs[1]]]]]
result[:update_cells]
result["update_cells"]
result[update_cells:]
result{update_cells:}
result
secondRun
n
myText
n
q
myBreaks[1] < myText.length
myText.length
myBreaks
myText
n
result
n
q
myformat
n
q
myformat
mydata
n
myText.length
myText
myBreaks
q
c
student.pname.length
formatBreakPoints
c
n
batchitems
batcjote,s
q
result
result[:repeat_cell][:range][:end_row_index] = 5
nr
result[:repeat_cell][:range][:end_row_index] = rs - 1 + nr
result[:repeat_cell]
result['repeat_cell']
result.repeat_cell
result
result->repeat_cell
result=>repeat_cell
result("repeat_cell")
result
result["repeat_cell"]
repeat_cell
result
cs
rs
sheet_id
result["repeat_cell"]
nr
c
n
c
n
nr
result
n
result
n
c
n
c
n
body
n
requests
n
palign
q
c
maxPersonRowInAnySlot
c
maxPersonRowInAnySlot
n
baseLessonRowInSlot
baseTutorRowInLesson
currentTutorRowInLesson
maxPersonRowInAnySlot
maxPersonAnyRowInSlot
c
b 2179
b 2124
currentRow
