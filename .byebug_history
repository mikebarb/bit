q
siv
display s
c
q
display s
c
q
display s
si
siv
c
siv
si
display s
c
siv
si
display s
q
siv
si
c
display s
si
q
si
display s
c
display s
q
c
display s
cells["stats"]
n
cells["stats"]
c
n
ss
n
display s
c
2*s[ss]['S']-s[ss]['R']-s[ss]['RoTo']
2*s[ss]['S']-s[ss]['R']-s[ss]['RoYo']
s[ss]['RoTo']
s[ss]['R']
s[ss]['S']
s[ss]
ss
display s
c
display s
c
display s
dis s
s
c
n
c
slot_html_partial
n
c
q
c
n
c
s
n
c
slot_stats
n
@slot_lessons
@slot_lessons[0].roles
@slot_lessons[1].roles
@slot_lessons
n
q
slot_lessons.each{|m| m.id}
slot_lessons.map{|m| m.id}
slot_lessons
n
c
slot_lessons.count
slot_lessons
entry
n
slot_lessons.count
slot_lessons
n
slot_dbid
slot_lessons
q
slot_lessons = Lesson.where(slot_id: slot_dbid).includes(roles:[:student]).count
slot_lessons = Lesson.where(slot_id: slot_dbid).includes(roles:[:student])
slot_lessons[1].roles[0].student.status
slot_lessons[1].roles[0].student
slot_lessons[1].roles[0].status
slot_lessons = Lesson.where(slot_id: slot_dbid).includes(roles:[:student])
slot_lessons[1].roles[0].status
slot_lessons[1].roles[0]
slot_lessons[0].roles[0]
slot_lessons[0].roles[0].status
slot_lessons[0].roles
slot_lessons[0].status
slot_lessons[0]
slot_lessons = Lesson.where(slot_id: slot_dbid).includes(:roles)
slot_lessons
slot_lessons[1]
slot_lessons = Lesson.where(slot_id: slot_dbid).includes(:roles).count
slot_lessons[0]
slot_lessons = Lesson.where(slot_id: slot_dbid).includes(:roles).count
slot_lessons = Lesson.where(slot_id: slot_dbid).includes(:roles)
slot_lessons = Lesson.where(slot_id: slot_dbid).count
slot_lessons = Lesson.where(slot_id: slot_dbid)
slot_dbid
slot_id
slot_roles = Role.includes(:lesson).where('lesson.slot_id = ?', slot_dbid).references(:lesson).count
slot_roles = Role.includes(:lesson).where('lesson.slot_id = ?', slot_dbid).references(:lesson)
slot_roles = Role.includes(:lesson).where('lesson.slot_id = ?', slot_dbid).count
slot_roles = Role.includes(:lesson).where('lesson.slot_id = ?', slot_dbid)
slot_lessons = Lesson.where(slot_id: slot_dbid).count
slot_lessons = Lesson.where(slot_id: slot_dbid)
slot_roles = Role.includes(:lesson).where('lesson.slot_id = ?', slot_dbid).references(:lesson).count
slot_roles = Role.includes(:lesson).where('lesson.slot_id = ?', slot_dbid).references(:lesson)
slot_roles = Role.includes(:lesson).where('lesson.slot_id = ?', slot_dbid).references(:lesson).count
slot_roles = Role.includes(:lessons).where('lesson.slot_id = ?', slot_dbid).references(:lesson).count
slot_roles = Role.includes(:lessons).where('lesson.slot_id = ?', slot_dbid).references(:lesson)
slot_roles = Eole.includes(:lessons).where('lesson.slot_id = ?', slot_dbid).references(:lesson)
slot_lessons = Lesson.where(slot_id: slot_dbid).includes(:roles)
slot_lessons = Lesson.where(slot_id: slot_dbid)
slot_lessons
n
slot_lessons
n
c
@domchange
n
new_lesson_id
n
@lesson_new.save
@lesson_new
n
@lesson_new
n
c
n
new_lesson_id
@role
n
@domchange
new_lesson_id
n
@lesson_new
n
Lesson.where(:slot_id => new_slot_dbId, :status => "allocate" )
n
result
n
params[:domchange][:to_slot]
n
params[:domchange].has_key?("to_slot")
params
c
q
c
display thisslot.id
c
slot_dom_id
n
c
thisslot
c
@slotsinfo.count
c
n
s
c
flagAllocateAddedToSlot
c
@sessallocate.count
@sessallocate
c
@students_stats
@student_stats
c
mike.count
mike
mike = Student.includes(:lessons, :roles).where(:lessons => {status: 'global'}, 'roles.student_id' => 'student.id')
mike.count
mike
mike = Student.includes(:lessons, :roles).where(:lessons => {status: 'global'}, 'role.student_id' => 'student.id')
mike[0].roles
mike[0].roles.status
mike[0].role.status
mike[0].pname
mike[0].roles
mike[0].slots
mike[0].lessons
mike[0]
mike[0].slots
mike[0].slot
mike
mike = Student.includes(:lessons, :roles).where(:lessons => {status: 'global'})
m = Student.includes(:lessons, :roles).where(:lessons => {status: 'global'})
Student.includes(:lessons, :roles).where(:lessons => {status: 'global'})
mike = Student.includes(:lessons, :Student.includes(:lessons, :roles).where(:lessons => {status: 'global'})role).where(:lessons => {status: 'global'})
mike.count
mike = Student.includes(:lessons, :role).where(:lessons => {status: 'global'})
@global_students.count
@global_students
@global_students = Student.includes(:lessons).where(:lessons => {status: 'global'})
c
@global_lessons_with_slots
c
mike[0].slot
mike = Lesson.where(id: @alllessons_ids ).includes(:slot)
mike[0].slot
mike.slot.location
mike.count
mike = Lesson.where(id: @alllessons_ids ).includes(:slots)
mike = Lesson.where(id: @alllessons_ids )
@alllessons_ids
@alllessons
mike.map { |o| o.id }
mike
mike.count
mike = Lesson.where('lesson.id' => @alllessons_ids )
@alllessons_ids = @alllessons.keys
mike.count
mike = Lesson.where('lesson.id' => @alllessons.keys )
mike.count
mike = Lesson.where(lesson: @alllessons.keys )
Lesson.where(lesson: @alllessons.keys )
Lesson.find(29193)
Lesson.find(29192)
@global_lessons_with_keys.count
@global_lessons_with_keys
@global_lessons_with_keys = Lesson.where('lesson.id' => @alllessons.keys)
@global_lessons_with_keys
@gloval_lessons_with_keys
 @global_lessons_with_slots = Lesson.where('lesson.id' => @alllessons.keys)
@global_lessons_with_slots = Lesson.where('lesson.id' => @alllessons.keys)
Lesson.where('lesson.id' => @alllessons.keys)
@alllessons.keys
@alllessons
c
student
n
c
v['student_object']
display v
dsp v
v
k
c
o.total
