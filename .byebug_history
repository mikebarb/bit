c
v
c
n
this_error
n
dest_chain
source_chain
c
n
c
dest_chain
source_chain
c
n
this_error
n
dest_chain
source_chain
c
n
dest_chain
source_chain
q
dest_chain
source_chain
c
dis b 1
h
c
@domchangebreakchainlast
n
c
@domchange['object_type']
n
c
@domchangebreakchainlast
n
@domchangebreakchainlast['new_slot_id']
n
o
n
@role_breakchainlast
c
@domchangerun[0]
@domchangebreakchainlast
n
c
@domchangerun[0]
domchanges
@domchangebreakchainlast['html_partial']
n
c
b 1256
n
c
@domchangebreakchainlast
n
@domchangebreakchainlast
slot_id
n
c
n
c
n
c
n
q
o.slot_id
o.slot.timeslot.strftime("%Y%m%d%H%M")
o.slot.location[0,3]
o.slot_id
o
o = @role_breakchainlast
o.inspect
o
@role_breakchainlast
o
n
@domchange
n
@role_breakchainlast
c
n
q
y
:q
mike = Lesson.includes(roles: :student).where(first: role.first)
mike[0].roles[0].student
mike[0].roles[0]
mike[0].roles
mike = Lesson.includes(roles: :student).where(first: role.first)
mike[0].roles
mike[0]
mike = Lesson.includes(:roles).where(first: role.first)
role.first
role
c
mike[0].roles
mike[0]
mike = Lesson.includes(:roles).where(first: role.first)
role.class
role
mike[0].roles
mike[0].role
mike.role
mike
mike = Lesson.includes(:role).where(first: role.first)
mike.roles
mike = Lesson.includes(:roles).where(first: role.first)
mike.roles
mike.role
mie.role
mie.role[0]
mike = Lesson.includes(roles: :students).where(first: role.first)
mike = Lesson.includes(roles: :student).where(first: role.first)
mike = Lesson.includes(:roles).where(first: role.first)
Lesson.includes(:roles).where(first: role.first)
role
role.first
@role_chain[0].roles
@role_chain[o].roles
@role_chain = Lesson.includes(:slot, roles: :students, tutroles: :tutors).where(first: role.first)
c
b 1019
@domchange
n
c
n
c
n
@domchange
n
@lesson
slot_id_basepart
n
@lesson
n
result
n
old_lesson_id
old_lesso_id
slot_id_basepart
n
c
n
c
n
@lesson
n
s
n
@domchange
c
n
c
n
lesson_ids
next
roles
n
role.block
role
n
c
role[0].block
role.block
role
n
lesson_id
student_id
c
q
c
set_class_run_f(   lesson)
lesson
c
n
c
n
c
n
c
options
n
c
options
c
params
options
c
options
c
params
c
params
c
params
c
params
n
c
params.has_key?('enddate')
params.has_key?('startdate')
params.has_key?('id')
params.has_key('id')
params.include?[:id]
params.include?[
params['id']
params['action']
params['actin']
params
history_params
params
c
params
history_params
c
@block_lessons[i]
display i
@role_chain_index_date
@block_lessons[i].slot.location
@block_lessons[i].slot.timeslot.to_datetime.to_s
@block_lessons[i].slot.timeslot.to_datetime
@role_chain_index_date[woy_lesson].slot
@role_chain_index_date[woy_lesson].slots.location
@role_chain_index_date[woy_lesson].slot.location
@role_chain_index_date[woy_lesson]
woy_lesson
@role_chain_index_date
c
n
statschanges.count
statschanges
c
@statschange
c
@block_roles.length
@block_roles
statschanges
c
User.select('id','email','daystart','daydur','history_back','history_forward').find(1)
User.select('id','email').find(1)
User.find(1)
User.find(params[:id])
c
display req
req
c
req
c
req.headers['Accept']
@default
req
c
@current_user
