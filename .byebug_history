c
nowdate
nowdate = DateTime.now.beginning_of_day
DateTime.now.beginning_of_day
DateTime.now.start_of_day
DateTime.now
DateTime.now.begging_of_day
Date.new
Date.now
DateTime.now
Datetime.today
Datetime.new
Datetime.now
c
@roles.count
@roles
n
c
@roles
n
c
@roles.count
@roles
n
q
mike.count
mike = Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :start_date", {start_date: mystartdate})
Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :start_date", {start_date: mystartdate})
Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :startdate", {start_date: mystartdate})
@roles
@roles.count
n
q
Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :start_date", {start_date: mystartdate})
Role.includes(lesson: :slot).where("lesson.slot.timeslot: >= :startdate", {start_date: mystartdate})
Role.includes(lesson: :slot).where(lesson.slot.timeslot: startdate)
==========================
c
wantedstatus
wantedkind
n
c
n
s
n
q
wantedstatus
wantedkind
n
c
params.map {|k,v| puts [k,v].inspect}
params.map {|k,v| pusts [k,v].inspect}
params
q
mylessoncomment.sub(/\n$/, '')
mylessoncomment.sub(/n$/, '')
mylessoncomment
n
mylessoncomment
q
c
v
mylessoncomment
n
mylessoncomment
q
v
@cal
n
@cal
@options
q
c
((current_place - copied_from)/1.week).round
((current_place - copied_from)/1.week)
(current_place - copied_from)
(current_place - copied_from).weeks
current_place
n
copied_from
n
c
copied_from_ids
@copied_from_roles
@copied_from_roles_index
info display
dis d 1
info display
info
c
=============================================
=====================================================
============================================
-----------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++
============================================
c
dis b 1
help
delete b 1
info b
c
slot_html_partial
n
display s
n
c
b 809
s['allocate']
s[ss]
n
entry.roles
n
s[ss]
n
slot_id
c
slot_dbid
slot_id 
slot_dom_id
@slot_lessons.map {|o| puts  [o.id, o.slot_id, o.status].inspect}
@slot_lessons.map {|o| puts  [o.id, o.slot_id].inspect}
@slot_lessons
mike
mikerole = Role.where(lesson_id: 57169)
mikerole = Role.where(lesson_id: 57169).count
mikerole = Role.where(lesson_id: 66502).count
mikerole = Role.where(lesson_id: 66502)
mike = Lesson.find(66502)
mike = Lesson.find(6650-2)
entry
@slot_lessons
slot_dbid
slot_id
entry
n
entry.roles
entry
n
entry.roles.count
entry.roles
s[ss]
n
ss
n
entry.slot_id
entry.students.count
entry.students
entry
c
n
statschanges
n
@trackslots
trackslots
statschanges
n
statschanges
get_slot_stats(k)
k
c
slot_dom_id
c
@trackslots
c
@trackslots
c
@trackslots
c
@trackslots
c
@trackslots
c
@trackslots
q
@trackslots
c
n
@domchange
n
@domchange
n
c
student_ids
n
q
student_ids[0].class == String
student_ids[0].class
student_ids[0].class == 'String'
student_ids.map{|o| o.class == 'String' ? o.to_i : o}
student_ids[0].class
student_ids[0].to_i
student_ids[0]
student_ids
n
c
student_ids[0].to_i
student_ids
n
student_ids
n
c
n
student_ids
n
student_ids.class
student_ids
n
options[:student_ids]
n
c
options[:student_ids].class
options[:student_ids]
options['student_ids']
optons['student_ids']
student_ids.class
c
display student_ids
b 212
b 210
student_ids
c
display o.student_id
o
a
c
n
o
a
n
o
a
c
a
c
a
n
o.student_id
o
a
c
b 209
student_ids
@roleinfo
c
n
student_ids
options
optoins
c
mystartdate.beginning_of_week
mystartdate.class
mystartdate
c
"2018-6-26".to_datetime
"2018-6-26 12:50".to_datetime
