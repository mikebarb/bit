q
r
q
r
c
Tutrole.where(tutor_id: nil)
Tutrole.where(tutor_id: nil).count
Tutrole.where(tutor_id: nil).delete_all
Tutrole.where(tutor_id: nil).delete
Tutrole.where(tutor_id: nil).count
Tutrole.where(tutor_id: nil)
Role.where(student_id: nil)
c
dis b 1
c
Role.where(student_id: nil)
nilroles.destroy_all
nilroles.inspect
nilroles.delete
nilroles.destroy
nilroles.count
nilroles = Role.where(student_id: nil)
Role.where(student_id: nil).destroy
Role.where(student_id: nil).count
Role.where(student_id: nil)
Lesson.where(student_id: nil).count
Lesson.where(student_id: nil)
obj.roles[0]
obj.roles[0].student
obj.roles[0].student.pname
obj.roles[0]
obj.roles.count
obj.roles.map{|r| puts [r.student.pname, r.status].inspect}
obj.roles.map{|r| [r.student.pname, r.status]}
obj.roles
c
info b
info
help
display 
c
b 76
c
n
c
@tutorhistory["lessons"]
temp
temprole
n
obj.roles
n
temp
tmp
n
temp
n
q
n
q
n
c
q
n
obj.tutroles[1]
obj.tutroles[0].tutor.pname
obj.tutroles[0].tutor
obj.tutroles[0].status
obj.tutroles[0]
obj.roles[3]
obj.roles[1].student.pname
obj.roles[1].student.status
obj.roles[1].student
obj.roles[0].status
obj.roles[0].student
obj.roles.student
obj.roles
obj.tutroles
n
obj
c
q
lesson_objs.count
c
n
temp
@studenthistory
@studenthistory["lessons"]
@studenthistory{"lessons"]
c
display obj.roles
display obj.tutroles
obj.roles
obj.tutroles
obj
n
b 69
lesson_objs
n
lesson_objs
c
q
lesson_objs.map { |obj| puts [obj.id, obj.status, obj.tutroles.map{|t| puts [t.tutor.pname].inspect}].inspect}
lesson_objs.map { |obj| puts [obj.id, obj.status, obj.tutroles.map{|t| puts [t.tutor.pname]}].inspect}
lesson_objs.map { |obj| puts [obj.id, obj.status, obj.tutroles.map{|t| puts t.tutor.pname}].inspect}
lesson_objs.map { |obj| puts [obj.id, obj.status, obj.tutroles[0].tutor.pname].inspect}
lesson_objs.map { |obj| puts [obj.id, obj.status, obj.tutroles[0].id].inspect}
lesson_objs.map { |obj| puts [obj.id, obj.status, obj.tutroles.inspect].inspect}
lesson_objs.map { |obj| puts [obj.id, obj.status, tutroles.inspect].inspect}
lesson_objs.map { |obj| puts [obj.id, obj.status].inspect}
lesson_objs.map { |obj| puts [obj.id].inspect}
n
c
n
lesson_objs[0].tutroles[0].tutor
lesson_objs[0].tutroles[0]
lesson_objs[0].roles[0].student
lesson_objs[0].roles
n
lesson_objs[0].roles
lesson_objs[0].roles[0].student
c
lesson_objs[0].roles[0].student
lesson_objs[0].roles.student
lesson_objs[0].roles
lesson_objs[0]
q
lesson_objs[0].roles.students
lesson_objs[0].roles.student
lesson_objs[0].roles
lesson_objs[0].roles.student
lesson_objs[0].tutroles.tutor
lesson_objs[0].tutroles
lesson_objs[0].tutroles.map(|r| puts [r.tutor.pname,   r.status].inspect}
lesson_objs[0].tutroles.map(|r| [r.tutor.pname,   r.status]}
lesson_objs[0].tutroles
lesson_objs[0].slot.location
lesson_objs[0].slot.timeslot
lesson_objs[0].slot
lesson_objs[0].status
lesson_objs[0].id.status
lesson_objs[0].id
lesson_objs[0]
lesson_objs
n
lesson_ids
c
@studenthistory["lessons"][0]
@studenthistory["lessons"]
n
c
n
c
n
c
n
c
@studenthistory
@student_history
n
c
n
c
n
mike.roles.map{|r| [r.student.pname, r.status]}
mike.roles.map{|o| [o.student.pname, o.status]}
mike.roles.map{|o| puts [o.student.pname, o.status].inspect}
mike.roles.map{|o| puts [o.status, o.student.pname].inspect}
mike.roles.map{|o| puts [o.status, o.student.pname].inpsect}
mike.roles.map{|o| puts [o.status, o.student.pname]}
mike.roles.map{|o| puts [o.status]}
mike.roles.map{|o| puts o.status}
mike.roles
mike
mike = lesson_objs[0]
c
n
q
mike.tutroles[0].tutor.pname
mike.tutroles[0].tutor
mike.tutroles[0].status
mike.tutroles[0]
mike.tutroles
mike.slot.location
mike.slot.timeslot
mike.status
mike.id
mike = lesson_objs[0]
lesson_objs[0]
lesson_objs
@studenthistory[0]
@studenthistory
@studenthistory[0]
@studenthistory
c
q
@students
c
b 1632
@students
n
s[1]
display s
q
c
q
c
display s
q
mike = cells["value"].sub('-', "-#{celltermweek}-")
mike = cells["value"].sub('-', '-#{celltermweek}-')
mike = cells["value"].sub('-', "-#{celltermweek}-")
mike = cells["value"].sub('-', "-#{celltermweek)-")
mike = cells["value"].sub('-', '-#{celltermweek)-')
mike = cells["value"].sub('-', '-x-')
mike = cells["value"].sub('-', 'x')
mike = cells["value"].gsub(/(-)/, 'x')
mike = cells["value"].gsub(/\w+(-)/, 'x')
mike = cells["value"].gsub(/\w+(-).*/, 'x')
mike
mike = cells["value"].gsub(/^\w+(-).*/, 'x')
cells["value"].gsub(/^\w+(-).*/, 'x')
cells["value"].gsub(/^\w+(-)/, 'x')
cells["value"]
cells["value"].class
cells["value"]
q
termweek = ((celldatetime - current_user.termstart.to_datetime).to_i)/7
diff
7 * 61
diff.to_i%7
diff.to_i/7
diff = DateTime.new(2020,4,24) -day1
diff.to_i/7
diff.to_i/1.week
diff.to_i
diff
diff/1.day
diff/1.week
diff/1.day
diff.to_s
diff.weeks
diff.days
diff.class
diff
diff = DateTime.new(2020,4,28) -day1
DateTime.new(2020,4,28) -day1
DateTime.new(2019,4,28) -day1
DateTime.new(2019,3,28) -day1
DateTime.new(2019,2,28) -day1
DateTime.new(2019,2,27) -day1
DateTime.new(2019,2,26) -day1
DateTime.new(2019,2,25) -day1
DateTime.new(2019,2,24) - day1
DateTime.new(2019,2,23) - day1
DateTime.new(2019,2,22) - day1
day2 - day1
